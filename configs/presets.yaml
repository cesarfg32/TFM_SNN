# =====================
# PRESETS TFM — SNN/CL
# =====================

# ---- Bloque base (anclas) ----
defaults: &defaults
  model: &defaults_model
    name: pilotnet_snn
    img_w: 200
    img_h: 66
    to_gray: true

  data: &defaults_data
    # Codificación
    encoder: rate              # rate | latency | raw | image
    T: 10
    gain: 0.5
    use_offline_spikes: true   # H5 offline
    encode_runtime: false      # solo si use_offline_spikes=false

    # Reproductibilidad / rendimiento
    seed: 42
    num_workers: 8
    prefetch_factor: 2
    pin_memory: true
    persistent_workers: true

    # Aumentos (ligeros por defecto)
    aug_train: &aug_light
      prob_hflip: 0.5       # ← solo en online
      brightness: [0.9, 1.1]
      contrast:   [0.9, 1.1]
      saturation: [0.9, 1.1]
      hue:        [-0.03, 0.03]
      gamma: null
      noise_std: 0.0

    # Balanceo online (desactivado por defecto)
    balance_online: false
    balance_bins: 50
    balance_smooth_eps: 0.001

  # División/prepare (offline)
  prep: &defaults_prep
    runs: ["circuito1", "circuito2"]  # o [] si autodetectas
    merge_subruns: true
    use_left_right: true
    steer_shift: 0.2
    bins: 50
    train: 0.70
    val: 0.15
    seed: 42
    # Balanceo offline de imágenes (si tu pipeline lo usa)
    balance_offline:
      mode: images            # images | none
      target_per_bin: auto
      cap_per_bin: 12000
      aug:
        prob_hflip: 0.0       # ← desactivar en offline, solo aumentos fotométricos
        brightness: [0.8, 1.2]
        contrast:   [0.8, 1.2]
        saturation: [0.8, 1.2]
        hue:        [-0.1, 0.1]
        gamma: null
        noise_std: 0.0
    tasks_file_name: tasks.json
    tasks_balanced_file_name: tasks_balanced.json
    use_balanced_tasks: true
    encode_h5: false   # (opcional). Se puede setear true en algún preset.

  optim: &defaults_optim
    amp: true
    lr: 0.001
    epochs: 2
    es_patience: null
    es_min_delta: null
    batch_size: 64

  # >>> EWC por defecto en TODOS los presets (salvo que se sobrescriba) <<<
  continual: &defaults_continual
    method: ewc
    params:
      lam: 1.0e9
      fisher_batches: 1000

  # === NUEVO: control de logs por preset ===
  logging: &defaults_logging
    telemetry:
      codecarbon: true
      offline: true
      country_iso_code: "ESP"
      measure_power_secs: 15
      log_level: "error"
    ewc:
      fisher_verbose: true   # true -> imprime “after_task: estimando Fisher...” y el resumen
      inner_verbose:  true   # true -> logs dentro del loop de entrenamiento
      inner_every:    100      # cada cuántos steps imprimir (si inner_verbose=true)

  naming: &defaults_naming
    tag: ""


# ---- Presets ----

fast:
  <<: *defaults
  data:
    <<: *defaults_data
    T: 10
  optim:
    <<: *defaults_optim
    epochs: 2       # 8
    batch_size: 128 # 64
  continual:
    <<: *defaults_continual
    params:
      lam: 3.0e8
      fisher_batches: 800
  prep:
    <<: *defaults_prep
    # p.ej. bins: 40   # (opcional, si quisieras menos bins)
  logging:
    <<: *defaults_logging

std:
  <<: *defaults
  data:
    <<: *defaults_data
    T: 16
  optim:
    <<: *defaults_optim
    lr: 5.0e-4
    epochs: 8
    batch_size: 96
    es_patience: 3          # ~37% de 8 épocas
    es_min_delta: 5.0e-4    # umbral razonable para MAE
  continual:
    <<: *defaults_continual
    params:
      lam: 1e9          # ← optuna # sugerido: 1.5e8
      fisher_batches: 1000
  prep:
    <<: *defaults_prep
  logging:
    <<: *defaults_logging

accurate:
  <<: *defaults
  data:
    <<: *defaults_data
    T: 30
  optim:
    <<: *defaults_optim
    lr: 7.5e-4
    epochs: 20
    batch_size: 16
    es_patience: 5          # 25% de 20 épocas
    es_min_delta: 7.5e-4    # sube a 1e-3 si ves ruido en val
  continual:
    method: rehearsal+ewc
    params:
      buffer_size: 3000
      replay_ratio: 0.2
      lam: 1.0e9
      fisher_batches: 1500
  prep:
    <<: *defaults_prep
  logging:
    <<: *defaults_logging

as_snn:
  <<: *defaults
  continual:
    method: as-snn
    params:
      lambda_a: 2.5
      gamma_ratio: 0.5
      ema: 0.9
  naming:
    <<: *defaults_naming
    tag: as_snn

as_snn_tuned:
  <<: *defaults
  continual:
    method: as-snn
    params:
      gamma_ratio: 0.3       # ← mejor de Optuna
      lambda_a: 1.59168      # ← mejor de Optuna (redondea si quieres: 1.59)
      ema: 0.824             # ← mejor de Optuna (0.823983…)
  naming:
    <<: *defaults_naming
    tag: as_snn_tuned


# Variante gris, T=10, gain=0.5, encoder=rate
rate_t10_gray:
  <<: *defaults
  model:
    <<: *defaults_model
    to_gray: true
  data:
    <<: *defaults_data
    encoder: rate
    T: 10
    gain: 0.5
  naming:
    <<: *defaults_naming
    tag: rate_t10_gray

# Variante color (to_gray=false), T=16, encoder=rate
rate_t16_rgb:
  <<: *defaults
  model:
    <<: *defaults_model
    to_gray: false
  data:
    <<: *defaults_data
    encoder: rate
    T: 16
    gain: 0.5
  naming:
    <<: *defaults_naming
    tag: rate_t16_rgb

# Variante latency, T=16, gris
latency_t16_gray:
  <<: *defaults
  data:
    <<: *defaults_data
    encoder: latency
    T: 16
  naming:
    <<: *defaults_naming
    tag: latency_t16_gray
